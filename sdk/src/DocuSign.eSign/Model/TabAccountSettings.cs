/* 
 * Docusign eSignature REST API
 *
 * The Docusign eSignature REST API provides you with a powerful, convenient, and simple Web services API for interacting with Docusign.
 *
 * OpenAPI spec version: v2.1
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace DocuSign.eSign.Model
{
    /// <summary>
    /// TabAccountSettings
    /// </summary>
    [DataContract]
    public partial class TabAccountSettings :  IEquatable<TabAccountSettings>, IValidatableObject
    {
        public TabAccountSettings()
        {
            // Empty Constructor
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TabAccountSettings" /> class.
        /// </summary>
        /// <param name="AllowTabOrder">AllowTabOrder.</param>
        /// <param name="AllowTabOrderMetadata">Metadata that indicates whether the &#x60;allowTabOrder&#x60; property is editable. .</param>
        /// <param name="ApproveDeclineTabsEnabled">ApproveDeclineTabsEnabled.</param>
        /// <param name="ApproveDeclineTabsMetadata">Metadata that indicates whether the &#x60;approveDeclineTabs&#x60; property is editable. .</param>
        /// <param name="CalculatedFieldsEnabled">CalculatedFieldsEnabled.</param>
        /// <param name="CalculatedFieldsMetadata">Metadata that indicates whether the &#x60;calculatedFields&#x60; property is editable. .</param>
        /// <param name="CheckboxTabsEnabled">CheckboxTabsEnabled.</param>
        /// <param name="CheckBoxTabsMetadata">Metadata that indicates whether the &#x60;checkBoxTabs&#x60; property is editable..</param>
        /// <param name="DataFieldRegexEnabled">DataFieldRegexEnabled.</param>
        /// <param name="DataFieldRegexMetadata">Metadata that indicates whether the &#x60;dataFieldRegex&#x60; property is editable. .</param>
        /// <param name="DataFieldSizeEnabled">DataFieldSizeEnabled.</param>
        /// <param name="DataFieldSizeMetadata">Metadata that indicates whether the &#x60;dataFieldSize&#x60; property is editable. .</param>
        /// <param name="DrawTabsEnabled">DrawTabsEnabled.</param>
        /// <param name="DrawTabsMetadata">DrawTabsMetadata.</param>
        /// <param name="EnableTabAgreementDetails">EnableTabAgreementDetails.</param>
        /// <param name="EnableTabAgreementDetailsMetadata">EnableTabAgreementDetailsMetadata.</param>
        /// <param name="FirstLastEmailTabsEnabled">FirstLastEmailTabsEnabled.</param>
        /// <param name="FirstLastEmailTabsMetadata">Reserved for DocuSign..</param>
        /// <param name="ListTabsEnabled">ListTabsEnabled.</param>
        /// <param name="ListTabsMetadata">Metadata that indicates whether the &#x60;listTabs&#x60; property is editable. .</param>
        /// <param name="NoteTabsEnabled">NoteTabsEnabled.</param>
        /// <param name="NoteTabsMetadata">Metadata that indicates whether the &#x60;noteTabs&#x60; property is editable. .</param>
        /// <param name="NumericalTabsEnabled">NumericalTabsEnabled.</param>
        /// <param name="NumericalTabsMetadata">NumericalTabsMetadata.</param>
        /// <param name="PrefillTabsEnabled">PrefillTabsEnabled.</param>
        /// <param name="PrefillTabsMetadata">PrefillTabsMetadata.</param>
        /// <param name="RadioTabsEnabled">RadioTabsEnabled.</param>
        /// <param name="RadioTabsMetadata">Metadata that indicates whether the &#x60;radioTabs&#x60; property is editable. .</param>
        /// <param name="SavingCustomTabsEnabled">SavingCustomTabsEnabled.</param>
        /// <param name="SavingCustomTabsMetadata">Metadata that indicates whether the &#x60;savingCustomTabs&#x60; property is editable. .</param>
        /// <param name="SenderToChangeTabAssignmentsEnabled">SenderToChangeTabAssignmentsEnabled.</param>
        /// <param name="SenderToChangeTabAssignmentsMetadata">Reserved for DocuSign..</param>
        /// <param name="SharedCustomTabsEnabled">SharedCustomTabsEnabled.</param>
        /// <param name="SharedCustomTabsMetadata">Metadata that indicates whether the &#x60;sharedCustomTabs&#x60; property is editable. .</param>
        /// <param name="TabDataLabelEnabled">TabDataLabelEnabled.</param>
        /// <param name="TabDataLabelMetadata">Metadata that indicates whether the &#x60;tabDataLabel&#x60; property is editable. .</param>
        /// <param name="TabLocationEnabled">TabLocationEnabled.</param>
        /// <param name="TabLocationMetadata">Reserved for DocuSign..</param>
        /// <param name="TabLockingEnabled">TabLockingEnabled.</param>
        /// <param name="TabLockingMetadata">Metadata that indicates whether the &#x60;tabLocking&#x60; property is editable. .</param>
        /// <param name="TabScaleEnabled">TabScaleEnabled.</param>
        /// <param name="TabScaleMetadata">Reserved for DocuSign..</param>
        /// <param name="TabTextFormattingEnabled">TabTextFormattingEnabled.</param>
        /// <param name="TabTextFormattingMetadata">Metadata that indicates whether the &#x60;tabTextFormatting&#x60; property is editable. .</param>
        /// <param name="TextTabsEnabled">TextTabsEnabled.</param>
        /// <param name="TextTabsMetadata">Metadata that indicates whether the &#x60;textTabs&#x60; property is editable. .</param>
        /// <param name="UriTabsEnabled">UriTabsEnabled.</param>
        /// <param name="UriTabsMetadata">UriTabsMetadata.</param>
        public TabAccountSettings(string AllowTabOrder = default(string), SettingsMetadata AllowTabOrderMetadata = default(SettingsMetadata), string ApproveDeclineTabsEnabled = default(string), SettingsMetadata ApproveDeclineTabsMetadata = default(SettingsMetadata), string CalculatedFieldsEnabled = default(string), SettingsMetadata CalculatedFieldsMetadata = default(SettingsMetadata), string CheckboxTabsEnabled = default(string), SettingsMetadata CheckBoxTabsMetadata = default(SettingsMetadata), string DataFieldRegexEnabled = default(string), SettingsMetadata DataFieldRegexMetadata = default(SettingsMetadata), string DataFieldSizeEnabled = default(string), SettingsMetadata DataFieldSizeMetadata = default(SettingsMetadata), string DrawTabsEnabled = default(string), SettingsMetadata DrawTabsMetadata = default(SettingsMetadata), string EnableTabAgreementDetails = default(string), SettingsMetadata EnableTabAgreementDetailsMetadata = default(SettingsMetadata), string FirstLastEmailTabsEnabled = default(string), SettingsMetadata FirstLastEmailTabsMetadata = default(SettingsMetadata), string ListTabsEnabled = default(string), SettingsMetadata ListTabsMetadata = default(SettingsMetadata), string NoteTabsEnabled = default(string), SettingsMetadata NoteTabsMetadata = default(SettingsMetadata), string NumericalTabsEnabled = default(string), SettingsMetadata NumericalTabsMetadata = default(SettingsMetadata), string PrefillTabsEnabled = default(string), SettingsMetadata PrefillTabsMetadata = default(SettingsMetadata), string RadioTabsEnabled = default(string), SettingsMetadata RadioTabsMetadata = default(SettingsMetadata), string SavingCustomTabsEnabled = default(string), SettingsMetadata SavingCustomTabsMetadata = default(SettingsMetadata), string SenderToChangeTabAssignmentsEnabled = default(string), SettingsMetadata SenderToChangeTabAssignmentsMetadata = default(SettingsMetadata), string SharedCustomTabsEnabled = default(string), SettingsMetadata SharedCustomTabsMetadata = default(SettingsMetadata), string TabDataLabelEnabled = default(string), SettingsMetadata TabDataLabelMetadata = default(SettingsMetadata), string TabLocationEnabled = default(string), SettingsMetadata TabLocationMetadata = default(SettingsMetadata), string TabLockingEnabled = default(string), SettingsMetadata TabLockingMetadata = default(SettingsMetadata), string TabScaleEnabled = default(string), SettingsMetadata TabScaleMetadata = default(SettingsMetadata), string TabTextFormattingEnabled = default(string), SettingsMetadata TabTextFormattingMetadata = default(SettingsMetadata), string TextTabsEnabled = default(string), SettingsMetadata TextTabsMetadata = default(SettingsMetadata), string UriTabsEnabled = default(string), SettingsMetadata UriTabsMetadata = default(SettingsMetadata))
        {
            this.AllowTabOrder = AllowTabOrder;
            this.AllowTabOrderMetadata = AllowTabOrderMetadata;
            this.ApproveDeclineTabsEnabled = ApproveDeclineTabsEnabled;
            this.ApproveDeclineTabsMetadata = ApproveDeclineTabsMetadata;
            this.CalculatedFieldsEnabled = CalculatedFieldsEnabled;
            this.CalculatedFieldsMetadata = CalculatedFieldsMetadata;
            this.CheckboxTabsEnabled = CheckboxTabsEnabled;
            this.CheckBoxTabsMetadata = CheckBoxTabsMetadata;
            this.DataFieldRegexEnabled = DataFieldRegexEnabled;
            this.DataFieldRegexMetadata = DataFieldRegexMetadata;
            this.DataFieldSizeEnabled = DataFieldSizeEnabled;
            this.DataFieldSizeMetadata = DataFieldSizeMetadata;
            this.DrawTabsEnabled = DrawTabsEnabled;
            this.DrawTabsMetadata = DrawTabsMetadata;
            this.EnableTabAgreementDetails = EnableTabAgreementDetails;
            this.EnableTabAgreementDetailsMetadata = EnableTabAgreementDetailsMetadata;
            this.FirstLastEmailTabsEnabled = FirstLastEmailTabsEnabled;
            this.FirstLastEmailTabsMetadata = FirstLastEmailTabsMetadata;
            this.ListTabsEnabled = ListTabsEnabled;
            this.ListTabsMetadata = ListTabsMetadata;
            this.NoteTabsEnabled = NoteTabsEnabled;
            this.NoteTabsMetadata = NoteTabsMetadata;
            this.NumericalTabsEnabled = NumericalTabsEnabled;
            this.NumericalTabsMetadata = NumericalTabsMetadata;
            this.PrefillTabsEnabled = PrefillTabsEnabled;
            this.PrefillTabsMetadata = PrefillTabsMetadata;
            this.RadioTabsEnabled = RadioTabsEnabled;
            this.RadioTabsMetadata = RadioTabsMetadata;
            this.SavingCustomTabsEnabled = SavingCustomTabsEnabled;
            this.SavingCustomTabsMetadata = SavingCustomTabsMetadata;
            this.SenderToChangeTabAssignmentsEnabled = SenderToChangeTabAssignmentsEnabled;
            this.SenderToChangeTabAssignmentsMetadata = SenderToChangeTabAssignmentsMetadata;
            this.SharedCustomTabsEnabled = SharedCustomTabsEnabled;
            this.SharedCustomTabsMetadata = SharedCustomTabsMetadata;
            this.TabDataLabelEnabled = TabDataLabelEnabled;
            this.TabDataLabelMetadata = TabDataLabelMetadata;
            this.TabLocationEnabled = TabLocationEnabled;
            this.TabLocationMetadata = TabLocationMetadata;
            this.TabLockingEnabled = TabLockingEnabled;
            this.TabLockingMetadata = TabLockingMetadata;
            this.TabScaleEnabled = TabScaleEnabled;
            this.TabScaleMetadata = TabScaleMetadata;
            this.TabTextFormattingEnabled = TabTextFormattingEnabled;
            this.TabTextFormattingMetadata = TabTextFormattingMetadata;
            this.TextTabsEnabled = TextTabsEnabled;
            this.TextTabsMetadata = TextTabsMetadata;
            this.UriTabsEnabled = UriTabsEnabled;
            this.UriTabsMetadata = UriTabsMetadata;
        }
        
        /// <summary>
        /// Gets or Sets AllowTabOrder
        /// </summary>
        [DataMember(Name="allowTabOrder", EmitDefaultValue=false)]
        public string AllowTabOrder { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;allowTabOrder&#x60; property is editable. 
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;allowTabOrder&#x60; property is editable. </value>
        [DataMember(Name="allowTabOrderMetadata", EmitDefaultValue=false)]
        public SettingsMetadata AllowTabOrderMetadata { get; set; }
        /// <summary>
        /// Gets or Sets ApproveDeclineTabsEnabled
        /// </summary>
        [DataMember(Name="approveDeclineTabsEnabled", EmitDefaultValue=false)]
        public string ApproveDeclineTabsEnabled { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;approveDeclineTabs&#x60; property is editable. 
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;approveDeclineTabs&#x60; property is editable. </value>
        [DataMember(Name="approveDeclineTabsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata ApproveDeclineTabsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets CalculatedFieldsEnabled
        /// </summary>
        [DataMember(Name="calculatedFieldsEnabled", EmitDefaultValue=false)]
        public string CalculatedFieldsEnabled { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;calculatedFields&#x60; property is editable. 
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;calculatedFields&#x60; property is editable. </value>
        [DataMember(Name="calculatedFieldsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata CalculatedFieldsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets CheckboxTabsEnabled
        /// </summary>
        [DataMember(Name="checkboxTabsEnabled", EmitDefaultValue=false)]
        public string CheckboxTabsEnabled { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;checkBoxTabs&#x60; property is editable.
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;checkBoxTabs&#x60; property is editable.</value>
        [DataMember(Name="checkBoxTabsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata CheckBoxTabsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets DataFieldRegexEnabled
        /// </summary>
        [DataMember(Name="dataFieldRegexEnabled", EmitDefaultValue=false)]
        public string DataFieldRegexEnabled { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;dataFieldRegex&#x60; property is editable. 
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;dataFieldRegex&#x60; property is editable. </value>
        [DataMember(Name="dataFieldRegexMetadata", EmitDefaultValue=false)]
        public SettingsMetadata DataFieldRegexMetadata { get; set; }
        /// <summary>
        /// Gets or Sets DataFieldSizeEnabled
        /// </summary>
        [DataMember(Name="dataFieldSizeEnabled", EmitDefaultValue=false)]
        public string DataFieldSizeEnabled { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;dataFieldSize&#x60; property is editable. 
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;dataFieldSize&#x60; property is editable. </value>
        [DataMember(Name="dataFieldSizeMetadata", EmitDefaultValue=false)]
        public SettingsMetadata DataFieldSizeMetadata { get; set; }
        /// <summary>
        /// Gets or Sets DrawTabsEnabled
        /// </summary>
        [DataMember(Name="drawTabsEnabled", EmitDefaultValue=false)]
        public string DrawTabsEnabled { get; set; }
        /// <summary>
        /// Gets or Sets DrawTabsMetadata
        /// </summary>
        [DataMember(Name="drawTabsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata DrawTabsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets EnableTabAgreementDetails
        /// </summary>
        [DataMember(Name="enableTabAgreementDetails", EmitDefaultValue=false)]
        public string EnableTabAgreementDetails { get; set; }
        /// <summary>
        /// Gets or Sets EnableTabAgreementDetailsMetadata
        /// </summary>
        [DataMember(Name="enableTabAgreementDetailsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata EnableTabAgreementDetailsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets FirstLastEmailTabsEnabled
        /// </summary>
        [DataMember(Name="firstLastEmailTabsEnabled", EmitDefaultValue=false)]
        public string FirstLastEmailTabsEnabled { get; set; }
        /// <summary>
        /// Reserved for DocuSign.
        /// </summary>
        /// <value>Reserved for DocuSign.</value>
        [DataMember(Name="firstLastEmailTabsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata FirstLastEmailTabsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets ListTabsEnabled
        /// </summary>
        [DataMember(Name="listTabsEnabled", EmitDefaultValue=false)]
        public string ListTabsEnabled { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;listTabs&#x60; property is editable. 
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;listTabs&#x60; property is editable. </value>
        [DataMember(Name="listTabsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata ListTabsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets NoteTabsEnabled
        /// </summary>
        [DataMember(Name="noteTabsEnabled", EmitDefaultValue=false)]
        public string NoteTabsEnabled { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;noteTabs&#x60; property is editable. 
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;noteTabs&#x60; property is editable. </value>
        [DataMember(Name="noteTabsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata NoteTabsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets NumericalTabsEnabled
        /// </summary>
        [DataMember(Name="numericalTabsEnabled", EmitDefaultValue=false)]
        public string NumericalTabsEnabled { get; set; }
        /// <summary>
        /// Gets or Sets NumericalTabsMetadata
        /// </summary>
        [DataMember(Name="numericalTabsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata NumericalTabsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets PrefillTabsEnabled
        /// </summary>
        [DataMember(Name="prefillTabsEnabled", EmitDefaultValue=false)]
        public string PrefillTabsEnabled { get; set; }
        /// <summary>
        /// Gets or Sets PrefillTabsMetadata
        /// </summary>
        [DataMember(Name="prefillTabsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata PrefillTabsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets RadioTabsEnabled
        /// </summary>
        [DataMember(Name="radioTabsEnabled", EmitDefaultValue=false)]
        public string RadioTabsEnabled { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;radioTabs&#x60; property is editable. 
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;radioTabs&#x60; property is editable. </value>
        [DataMember(Name="radioTabsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata RadioTabsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets SavingCustomTabsEnabled
        /// </summary>
        [DataMember(Name="savingCustomTabsEnabled", EmitDefaultValue=false)]
        public string SavingCustomTabsEnabled { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;savingCustomTabs&#x60; property is editable. 
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;savingCustomTabs&#x60; property is editable. </value>
        [DataMember(Name="savingCustomTabsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata SavingCustomTabsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets SenderToChangeTabAssignmentsEnabled
        /// </summary>
        [DataMember(Name="senderToChangeTabAssignmentsEnabled", EmitDefaultValue=false)]
        public string SenderToChangeTabAssignmentsEnabled { get; set; }
        /// <summary>
        /// Reserved for DocuSign.
        /// </summary>
        /// <value>Reserved for DocuSign.</value>
        [DataMember(Name="senderToChangeTabAssignmentsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata SenderToChangeTabAssignmentsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets SharedCustomTabsEnabled
        /// </summary>
        [DataMember(Name="sharedCustomTabsEnabled", EmitDefaultValue=false)]
        public string SharedCustomTabsEnabled { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;sharedCustomTabs&#x60; property is editable. 
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;sharedCustomTabs&#x60; property is editable. </value>
        [DataMember(Name="sharedCustomTabsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata SharedCustomTabsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets TabDataLabelEnabled
        /// </summary>
        [DataMember(Name="tabDataLabelEnabled", EmitDefaultValue=false)]
        public string TabDataLabelEnabled { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;tabDataLabel&#x60; property is editable. 
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;tabDataLabel&#x60; property is editable. </value>
        [DataMember(Name="tabDataLabelMetadata", EmitDefaultValue=false)]
        public SettingsMetadata TabDataLabelMetadata { get; set; }
        /// <summary>
        /// Gets or Sets TabLocationEnabled
        /// </summary>
        [DataMember(Name="tabLocationEnabled", EmitDefaultValue=false)]
        public string TabLocationEnabled { get; set; }
        /// <summary>
        /// Reserved for DocuSign.
        /// </summary>
        /// <value>Reserved for DocuSign.</value>
        [DataMember(Name="tabLocationMetadata", EmitDefaultValue=false)]
        public SettingsMetadata TabLocationMetadata { get; set; }
        /// <summary>
        /// Gets or Sets TabLockingEnabled
        /// </summary>
        [DataMember(Name="tabLockingEnabled", EmitDefaultValue=false)]
        public string TabLockingEnabled { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;tabLocking&#x60; property is editable. 
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;tabLocking&#x60; property is editable. </value>
        [DataMember(Name="tabLockingMetadata", EmitDefaultValue=false)]
        public SettingsMetadata TabLockingMetadata { get; set; }
        /// <summary>
        /// Gets or Sets TabScaleEnabled
        /// </summary>
        [DataMember(Name="tabScaleEnabled", EmitDefaultValue=false)]
        public string TabScaleEnabled { get; set; }
        /// <summary>
        /// Reserved for DocuSign.
        /// </summary>
        /// <value>Reserved for DocuSign.</value>
        [DataMember(Name="tabScaleMetadata", EmitDefaultValue=false)]
        public SettingsMetadata TabScaleMetadata { get; set; }
        /// <summary>
        /// Gets or Sets TabTextFormattingEnabled
        /// </summary>
        [DataMember(Name="tabTextFormattingEnabled", EmitDefaultValue=false)]
        public string TabTextFormattingEnabled { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;tabTextFormatting&#x60; property is editable. 
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;tabTextFormatting&#x60; property is editable. </value>
        [DataMember(Name="tabTextFormattingMetadata", EmitDefaultValue=false)]
        public SettingsMetadata TabTextFormattingMetadata { get; set; }
        /// <summary>
        /// Gets or Sets TextTabsEnabled
        /// </summary>
        [DataMember(Name="textTabsEnabled", EmitDefaultValue=false)]
        public string TextTabsEnabled { get; set; }
        /// <summary>
        /// Metadata that indicates whether the &#x60;textTabs&#x60; property is editable. 
        /// </summary>
        /// <value>Metadata that indicates whether the &#x60;textTabs&#x60; property is editable. </value>
        [DataMember(Name="textTabsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata TextTabsMetadata { get; set; }
        /// <summary>
        /// Gets or Sets UriTabsEnabled
        /// </summary>
        [DataMember(Name="uriTabsEnabled", EmitDefaultValue=false)]
        public string UriTabsEnabled { get; set; }
        /// <summary>
        /// Gets or Sets UriTabsMetadata
        /// </summary>
        [DataMember(Name="uriTabsMetadata", EmitDefaultValue=false)]
        public SettingsMetadata UriTabsMetadata { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TabAccountSettings {\n");
            sb.Append("  AllowTabOrder: ").Append(AllowTabOrder).Append("\n");
            sb.Append("  AllowTabOrderMetadata: ").Append(AllowTabOrderMetadata).Append("\n");
            sb.Append("  ApproveDeclineTabsEnabled: ").Append(ApproveDeclineTabsEnabled).Append("\n");
            sb.Append("  ApproveDeclineTabsMetadata: ").Append(ApproveDeclineTabsMetadata).Append("\n");
            sb.Append("  CalculatedFieldsEnabled: ").Append(CalculatedFieldsEnabled).Append("\n");
            sb.Append("  CalculatedFieldsMetadata: ").Append(CalculatedFieldsMetadata).Append("\n");
            sb.Append("  CheckboxTabsEnabled: ").Append(CheckboxTabsEnabled).Append("\n");
            sb.Append("  CheckBoxTabsMetadata: ").Append(CheckBoxTabsMetadata).Append("\n");
            sb.Append("  DataFieldRegexEnabled: ").Append(DataFieldRegexEnabled).Append("\n");
            sb.Append("  DataFieldRegexMetadata: ").Append(DataFieldRegexMetadata).Append("\n");
            sb.Append("  DataFieldSizeEnabled: ").Append(DataFieldSizeEnabled).Append("\n");
            sb.Append("  DataFieldSizeMetadata: ").Append(DataFieldSizeMetadata).Append("\n");
            sb.Append("  DrawTabsEnabled: ").Append(DrawTabsEnabled).Append("\n");
            sb.Append("  DrawTabsMetadata: ").Append(DrawTabsMetadata).Append("\n");
            sb.Append("  EnableTabAgreementDetails: ").Append(EnableTabAgreementDetails).Append("\n");
            sb.Append("  EnableTabAgreementDetailsMetadata: ").Append(EnableTabAgreementDetailsMetadata).Append("\n");
            sb.Append("  FirstLastEmailTabsEnabled: ").Append(FirstLastEmailTabsEnabled).Append("\n");
            sb.Append("  FirstLastEmailTabsMetadata: ").Append(FirstLastEmailTabsMetadata).Append("\n");
            sb.Append("  ListTabsEnabled: ").Append(ListTabsEnabled).Append("\n");
            sb.Append("  ListTabsMetadata: ").Append(ListTabsMetadata).Append("\n");
            sb.Append("  NoteTabsEnabled: ").Append(NoteTabsEnabled).Append("\n");
            sb.Append("  NoteTabsMetadata: ").Append(NoteTabsMetadata).Append("\n");
            sb.Append("  NumericalTabsEnabled: ").Append(NumericalTabsEnabled).Append("\n");
            sb.Append("  NumericalTabsMetadata: ").Append(NumericalTabsMetadata).Append("\n");
            sb.Append("  PrefillTabsEnabled: ").Append(PrefillTabsEnabled).Append("\n");
            sb.Append("  PrefillTabsMetadata: ").Append(PrefillTabsMetadata).Append("\n");
            sb.Append("  RadioTabsEnabled: ").Append(RadioTabsEnabled).Append("\n");
            sb.Append("  RadioTabsMetadata: ").Append(RadioTabsMetadata).Append("\n");
            sb.Append("  SavingCustomTabsEnabled: ").Append(SavingCustomTabsEnabled).Append("\n");
            sb.Append("  SavingCustomTabsMetadata: ").Append(SavingCustomTabsMetadata).Append("\n");
            sb.Append("  SenderToChangeTabAssignmentsEnabled: ").Append(SenderToChangeTabAssignmentsEnabled).Append("\n");
            sb.Append("  SenderToChangeTabAssignmentsMetadata: ").Append(SenderToChangeTabAssignmentsMetadata).Append("\n");
            sb.Append("  SharedCustomTabsEnabled: ").Append(SharedCustomTabsEnabled).Append("\n");
            sb.Append("  SharedCustomTabsMetadata: ").Append(SharedCustomTabsMetadata).Append("\n");
            sb.Append("  TabDataLabelEnabled: ").Append(TabDataLabelEnabled).Append("\n");
            sb.Append("  TabDataLabelMetadata: ").Append(TabDataLabelMetadata).Append("\n");
            sb.Append("  TabLocationEnabled: ").Append(TabLocationEnabled).Append("\n");
            sb.Append("  TabLocationMetadata: ").Append(TabLocationMetadata).Append("\n");
            sb.Append("  TabLockingEnabled: ").Append(TabLockingEnabled).Append("\n");
            sb.Append("  TabLockingMetadata: ").Append(TabLockingMetadata).Append("\n");
            sb.Append("  TabScaleEnabled: ").Append(TabScaleEnabled).Append("\n");
            sb.Append("  TabScaleMetadata: ").Append(TabScaleMetadata).Append("\n");
            sb.Append("  TabTextFormattingEnabled: ").Append(TabTextFormattingEnabled).Append("\n");
            sb.Append("  TabTextFormattingMetadata: ").Append(TabTextFormattingMetadata).Append("\n");
            sb.Append("  TextTabsEnabled: ").Append(TextTabsEnabled).Append("\n");
            sb.Append("  TextTabsMetadata: ").Append(TextTabsMetadata).Append("\n");
            sb.Append("  UriTabsEnabled: ").Append(UriTabsEnabled).Append("\n");
            sb.Append("  UriTabsMetadata: ").Append(UriTabsMetadata).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as TabAccountSettings);
        }

        /// <summary>
        /// Returns true if TabAccountSettings instances are equal
        /// </summary>
        /// <param name="other">Instance of TabAccountSettings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TabAccountSettings other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AllowTabOrder == other.AllowTabOrder ||
                    this.AllowTabOrder != null &&
                    this.AllowTabOrder.Equals(other.AllowTabOrder)
                ) && 
                (
                    this.AllowTabOrderMetadata == other.AllowTabOrderMetadata ||
                    this.AllowTabOrderMetadata != null &&
                    this.AllowTabOrderMetadata.Equals(other.AllowTabOrderMetadata)
                ) && 
                (
                    this.ApproveDeclineTabsEnabled == other.ApproveDeclineTabsEnabled ||
                    this.ApproveDeclineTabsEnabled != null &&
                    this.ApproveDeclineTabsEnabled.Equals(other.ApproveDeclineTabsEnabled)
                ) && 
                (
                    this.ApproveDeclineTabsMetadata == other.ApproveDeclineTabsMetadata ||
                    this.ApproveDeclineTabsMetadata != null &&
                    this.ApproveDeclineTabsMetadata.Equals(other.ApproveDeclineTabsMetadata)
                ) && 
                (
                    this.CalculatedFieldsEnabled == other.CalculatedFieldsEnabled ||
                    this.CalculatedFieldsEnabled != null &&
                    this.CalculatedFieldsEnabled.Equals(other.CalculatedFieldsEnabled)
                ) && 
                (
                    this.CalculatedFieldsMetadata == other.CalculatedFieldsMetadata ||
                    this.CalculatedFieldsMetadata != null &&
                    this.CalculatedFieldsMetadata.Equals(other.CalculatedFieldsMetadata)
                ) && 
                (
                    this.CheckboxTabsEnabled == other.CheckboxTabsEnabled ||
                    this.CheckboxTabsEnabled != null &&
                    this.CheckboxTabsEnabled.Equals(other.CheckboxTabsEnabled)
                ) && 
                (
                    this.CheckBoxTabsMetadata == other.CheckBoxTabsMetadata ||
                    this.CheckBoxTabsMetadata != null &&
                    this.CheckBoxTabsMetadata.Equals(other.CheckBoxTabsMetadata)
                ) && 
                (
                    this.DataFieldRegexEnabled == other.DataFieldRegexEnabled ||
                    this.DataFieldRegexEnabled != null &&
                    this.DataFieldRegexEnabled.Equals(other.DataFieldRegexEnabled)
                ) && 
                (
                    this.DataFieldRegexMetadata == other.DataFieldRegexMetadata ||
                    this.DataFieldRegexMetadata != null &&
                    this.DataFieldRegexMetadata.Equals(other.DataFieldRegexMetadata)
                ) && 
                (
                    this.DataFieldSizeEnabled == other.DataFieldSizeEnabled ||
                    this.DataFieldSizeEnabled != null &&
                    this.DataFieldSizeEnabled.Equals(other.DataFieldSizeEnabled)
                ) && 
                (
                    this.DataFieldSizeMetadata == other.DataFieldSizeMetadata ||
                    this.DataFieldSizeMetadata != null &&
                    this.DataFieldSizeMetadata.Equals(other.DataFieldSizeMetadata)
                ) && 
                (
                    this.DrawTabsEnabled == other.DrawTabsEnabled ||
                    this.DrawTabsEnabled != null &&
                    this.DrawTabsEnabled.Equals(other.DrawTabsEnabled)
                ) && 
                (
                    this.DrawTabsMetadata == other.DrawTabsMetadata ||
                    this.DrawTabsMetadata != null &&
                    this.DrawTabsMetadata.Equals(other.DrawTabsMetadata)
                ) && 
                (
                    this.EnableTabAgreementDetails == other.EnableTabAgreementDetails ||
                    this.EnableTabAgreementDetails != null &&
                    this.EnableTabAgreementDetails.Equals(other.EnableTabAgreementDetails)
                ) && 
                (
                    this.EnableTabAgreementDetailsMetadata == other.EnableTabAgreementDetailsMetadata ||
                    this.EnableTabAgreementDetailsMetadata != null &&
                    this.EnableTabAgreementDetailsMetadata.Equals(other.EnableTabAgreementDetailsMetadata)
                ) && 
                (
                    this.FirstLastEmailTabsEnabled == other.FirstLastEmailTabsEnabled ||
                    this.FirstLastEmailTabsEnabled != null &&
                    this.FirstLastEmailTabsEnabled.Equals(other.FirstLastEmailTabsEnabled)
                ) && 
                (
                    this.FirstLastEmailTabsMetadata == other.FirstLastEmailTabsMetadata ||
                    this.FirstLastEmailTabsMetadata != null &&
                    this.FirstLastEmailTabsMetadata.Equals(other.FirstLastEmailTabsMetadata)
                ) && 
                (
                    this.ListTabsEnabled == other.ListTabsEnabled ||
                    this.ListTabsEnabled != null &&
                    this.ListTabsEnabled.Equals(other.ListTabsEnabled)
                ) && 
                (
                    this.ListTabsMetadata == other.ListTabsMetadata ||
                    this.ListTabsMetadata != null &&
                    this.ListTabsMetadata.Equals(other.ListTabsMetadata)
                ) && 
                (
                    this.NoteTabsEnabled == other.NoteTabsEnabled ||
                    this.NoteTabsEnabled != null &&
                    this.NoteTabsEnabled.Equals(other.NoteTabsEnabled)
                ) && 
                (
                    this.NoteTabsMetadata == other.NoteTabsMetadata ||
                    this.NoteTabsMetadata != null &&
                    this.NoteTabsMetadata.Equals(other.NoteTabsMetadata)
                ) && 
                (
                    this.NumericalTabsEnabled == other.NumericalTabsEnabled ||
                    this.NumericalTabsEnabled != null &&
                    this.NumericalTabsEnabled.Equals(other.NumericalTabsEnabled)
                ) && 
                (
                    this.NumericalTabsMetadata == other.NumericalTabsMetadata ||
                    this.NumericalTabsMetadata != null &&
                    this.NumericalTabsMetadata.Equals(other.NumericalTabsMetadata)
                ) && 
                (
                    this.PrefillTabsEnabled == other.PrefillTabsEnabled ||
                    this.PrefillTabsEnabled != null &&
                    this.PrefillTabsEnabled.Equals(other.PrefillTabsEnabled)
                ) && 
                (
                    this.PrefillTabsMetadata == other.PrefillTabsMetadata ||
                    this.PrefillTabsMetadata != null &&
                    this.PrefillTabsMetadata.Equals(other.PrefillTabsMetadata)
                ) && 
                (
                    this.RadioTabsEnabled == other.RadioTabsEnabled ||
                    this.RadioTabsEnabled != null &&
                    this.RadioTabsEnabled.Equals(other.RadioTabsEnabled)
                ) && 
                (
                    this.RadioTabsMetadata == other.RadioTabsMetadata ||
                    this.RadioTabsMetadata != null &&
                    this.RadioTabsMetadata.Equals(other.RadioTabsMetadata)
                ) && 
                (
                    this.SavingCustomTabsEnabled == other.SavingCustomTabsEnabled ||
                    this.SavingCustomTabsEnabled != null &&
                    this.SavingCustomTabsEnabled.Equals(other.SavingCustomTabsEnabled)
                ) && 
                (
                    this.SavingCustomTabsMetadata == other.SavingCustomTabsMetadata ||
                    this.SavingCustomTabsMetadata != null &&
                    this.SavingCustomTabsMetadata.Equals(other.SavingCustomTabsMetadata)
                ) && 
                (
                    this.SenderToChangeTabAssignmentsEnabled == other.SenderToChangeTabAssignmentsEnabled ||
                    this.SenderToChangeTabAssignmentsEnabled != null &&
                    this.SenderToChangeTabAssignmentsEnabled.Equals(other.SenderToChangeTabAssignmentsEnabled)
                ) && 
                (
                    this.SenderToChangeTabAssignmentsMetadata == other.SenderToChangeTabAssignmentsMetadata ||
                    this.SenderToChangeTabAssignmentsMetadata != null &&
                    this.SenderToChangeTabAssignmentsMetadata.Equals(other.SenderToChangeTabAssignmentsMetadata)
                ) && 
                (
                    this.SharedCustomTabsEnabled == other.SharedCustomTabsEnabled ||
                    this.SharedCustomTabsEnabled != null &&
                    this.SharedCustomTabsEnabled.Equals(other.SharedCustomTabsEnabled)
                ) && 
                (
                    this.SharedCustomTabsMetadata == other.SharedCustomTabsMetadata ||
                    this.SharedCustomTabsMetadata != null &&
                    this.SharedCustomTabsMetadata.Equals(other.SharedCustomTabsMetadata)
                ) && 
                (
                    this.TabDataLabelEnabled == other.TabDataLabelEnabled ||
                    this.TabDataLabelEnabled != null &&
                    this.TabDataLabelEnabled.Equals(other.TabDataLabelEnabled)
                ) && 
                (
                    this.TabDataLabelMetadata == other.TabDataLabelMetadata ||
                    this.TabDataLabelMetadata != null &&
                    this.TabDataLabelMetadata.Equals(other.TabDataLabelMetadata)
                ) && 
                (
                    this.TabLocationEnabled == other.TabLocationEnabled ||
                    this.TabLocationEnabled != null &&
                    this.TabLocationEnabled.Equals(other.TabLocationEnabled)
                ) && 
                (
                    this.TabLocationMetadata == other.TabLocationMetadata ||
                    this.TabLocationMetadata != null &&
                    this.TabLocationMetadata.Equals(other.TabLocationMetadata)
                ) && 
                (
                    this.TabLockingEnabled == other.TabLockingEnabled ||
                    this.TabLockingEnabled != null &&
                    this.TabLockingEnabled.Equals(other.TabLockingEnabled)
                ) && 
                (
                    this.TabLockingMetadata == other.TabLockingMetadata ||
                    this.TabLockingMetadata != null &&
                    this.TabLockingMetadata.Equals(other.TabLockingMetadata)
                ) && 
                (
                    this.TabScaleEnabled == other.TabScaleEnabled ||
                    this.TabScaleEnabled != null &&
                    this.TabScaleEnabled.Equals(other.TabScaleEnabled)
                ) && 
                (
                    this.TabScaleMetadata == other.TabScaleMetadata ||
                    this.TabScaleMetadata != null &&
                    this.TabScaleMetadata.Equals(other.TabScaleMetadata)
                ) && 
                (
                    this.TabTextFormattingEnabled == other.TabTextFormattingEnabled ||
                    this.TabTextFormattingEnabled != null &&
                    this.TabTextFormattingEnabled.Equals(other.TabTextFormattingEnabled)
                ) && 
                (
                    this.TabTextFormattingMetadata == other.TabTextFormattingMetadata ||
                    this.TabTextFormattingMetadata != null &&
                    this.TabTextFormattingMetadata.Equals(other.TabTextFormattingMetadata)
                ) && 
                (
                    this.TextTabsEnabled == other.TextTabsEnabled ||
                    this.TextTabsEnabled != null &&
                    this.TextTabsEnabled.Equals(other.TextTabsEnabled)
                ) && 
                (
                    this.TextTabsMetadata == other.TextTabsMetadata ||
                    this.TextTabsMetadata != null &&
                    this.TextTabsMetadata.Equals(other.TextTabsMetadata)
                ) && 
                (
                    this.UriTabsEnabled == other.UriTabsEnabled ||
                    this.UriTabsEnabled != null &&
                    this.UriTabsEnabled.Equals(other.UriTabsEnabled)
                ) && 
                (
                    this.UriTabsMetadata == other.UriTabsMetadata ||
                    this.UriTabsMetadata != null &&
                    this.UriTabsMetadata.Equals(other.UriTabsMetadata)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AllowTabOrder != null)
                    hash = hash * 59 + this.AllowTabOrder.GetHashCode();
                if (this.AllowTabOrderMetadata != null)
                    hash = hash * 59 + this.AllowTabOrderMetadata.GetHashCode();
                if (this.ApproveDeclineTabsEnabled != null)
                    hash = hash * 59 + this.ApproveDeclineTabsEnabled.GetHashCode();
                if (this.ApproveDeclineTabsMetadata != null)
                    hash = hash * 59 + this.ApproveDeclineTabsMetadata.GetHashCode();
                if (this.CalculatedFieldsEnabled != null)
                    hash = hash * 59 + this.CalculatedFieldsEnabled.GetHashCode();
                if (this.CalculatedFieldsMetadata != null)
                    hash = hash * 59 + this.CalculatedFieldsMetadata.GetHashCode();
                if (this.CheckboxTabsEnabled != null)
                    hash = hash * 59 + this.CheckboxTabsEnabled.GetHashCode();
                if (this.CheckBoxTabsMetadata != null)
                    hash = hash * 59 + this.CheckBoxTabsMetadata.GetHashCode();
                if (this.DataFieldRegexEnabled != null)
                    hash = hash * 59 + this.DataFieldRegexEnabled.GetHashCode();
                if (this.DataFieldRegexMetadata != null)
                    hash = hash * 59 + this.DataFieldRegexMetadata.GetHashCode();
                if (this.DataFieldSizeEnabled != null)
                    hash = hash * 59 + this.DataFieldSizeEnabled.GetHashCode();
                if (this.DataFieldSizeMetadata != null)
                    hash = hash * 59 + this.DataFieldSizeMetadata.GetHashCode();
                if (this.DrawTabsEnabled != null)
                    hash = hash * 59 + this.DrawTabsEnabled.GetHashCode();
                if (this.DrawTabsMetadata != null)
                    hash = hash * 59 + this.DrawTabsMetadata.GetHashCode();
                if (this.EnableTabAgreementDetails != null)
                    hash = hash * 59 + this.EnableTabAgreementDetails.GetHashCode();
                if (this.EnableTabAgreementDetailsMetadata != null)
                    hash = hash * 59 + this.EnableTabAgreementDetailsMetadata.GetHashCode();
                if (this.FirstLastEmailTabsEnabled != null)
                    hash = hash * 59 + this.FirstLastEmailTabsEnabled.GetHashCode();
                if (this.FirstLastEmailTabsMetadata != null)
                    hash = hash * 59 + this.FirstLastEmailTabsMetadata.GetHashCode();
                if (this.ListTabsEnabled != null)
                    hash = hash * 59 + this.ListTabsEnabled.GetHashCode();
                if (this.ListTabsMetadata != null)
                    hash = hash * 59 + this.ListTabsMetadata.GetHashCode();
                if (this.NoteTabsEnabled != null)
                    hash = hash * 59 + this.NoteTabsEnabled.GetHashCode();
                if (this.NoteTabsMetadata != null)
                    hash = hash * 59 + this.NoteTabsMetadata.GetHashCode();
                if (this.NumericalTabsEnabled != null)
                    hash = hash * 59 + this.NumericalTabsEnabled.GetHashCode();
                if (this.NumericalTabsMetadata != null)
                    hash = hash * 59 + this.NumericalTabsMetadata.GetHashCode();
                if (this.PrefillTabsEnabled != null)
                    hash = hash * 59 + this.PrefillTabsEnabled.GetHashCode();
                if (this.PrefillTabsMetadata != null)
                    hash = hash * 59 + this.PrefillTabsMetadata.GetHashCode();
                if (this.RadioTabsEnabled != null)
                    hash = hash * 59 + this.RadioTabsEnabled.GetHashCode();
                if (this.RadioTabsMetadata != null)
                    hash = hash * 59 + this.RadioTabsMetadata.GetHashCode();
                if (this.SavingCustomTabsEnabled != null)
                    hash = hash * 59 + this.SavingCustomTabsEnabled.GetHashCode();
                if (this.SavingCustomTabsMetadata != null)
                    hash = hash * 59 + this.SavingCustomTabsMetadata.GetHashCode();
                if (this.SenderToChangeTabAssignmentsEnabled != null)
                    hash = hash * 59 + this.SenderToChangeTabAssignmentsEnabled.GetHashCode();
                if (this.SenderToChangeTabAssignmentsMetadata != null)
                    hash = hash * 59 + this.SenderToChangeTabAssignmentsMetadata.GetHashCode();
                if (this.SharedCustomTabsEnabled != null)
                    hash = hash * 59 + this.SharedCustomTabsEnabled.GetHashCode();
                if (this.SharedCustomTabsMetadata != null)
                    hash = hash * 59 + this.SharedCustomTabsMetadata.GetHashCode();
                if (this.TabDataLabelEnabled != null)
                    hash = hash * 59 + this.TabDataLabelEnabled.GetHashCode();
                if (this.TabDataLabelMetadata != null)
                    hash = hash * 59 + this.TabDataLabelMetadata.GetHashCode();
                if (this.TabLocationEnabled != null)
                    hash = hash * 59 + this.TabLocationEnabled.GetHashCode();
                if (this.TabLocationMetadata != null)
                    hash = hash * 59 + this.TabLocationMetadata.GetHashCode();
                if (this.TabLockingEnabled != null)
                    hash = hash * 59 + this.TabLockingEnabled.GetHashCode();
                if (this.TabLockingMetadata != null)
                    hash = hash * 59 + this.TabLockingMetadata.GetHashCode();
                if (this.TabScaleEnabled != null)
                    hash = hash * 59 + this.TabScaleEnabled.GetHashCode();
                if (this.TabScaleMetadata != null)
                    hash = hash * 59 + this.TabScaleMetadata.GetHashCode();
                if (this.TabTextFormattingEnabled != null)
                    hash = hash * 59 + this.TabTextFormattingEnabled.GetHashCode();
                if (this.TabTextFormattingMetadata != null)
                    hash = hash * 59 + this.TabTextFormattingMetadata.GetHashCode();
                if (this.TextTabsEnabled != null)
                    hash = hash * 59 + this.TextTabsEnabled.GetHashCode();
                if (this.TextTabsMetadata != null)
                    hash = hash * 59 + this.TextTabsMetadata.GetHashCode();
                if (this.UriTabsEnabled != null)
                    hash = hash * 59 + this.UriTabsEnabled.GetHashCode();
                if (this.UriTabsMetadata != null)
                    hash = hash * 59 + this.UriTabsMetadata.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }
}
